# Update unittests.html based on remote unit test files
# Requires secrets:
# - SF_RSYNC_USER

trigger:
- master

schedules:
- cron: "15 */6 * * *"    # Every 6 hours
  branches:
    include:
    - master
  always: true
  batch: false
  displayName: Every 6 hours

pool:
  vmImage: 'ubuntu-latest'

variables:
  PROJWEBDIR: '/home/project-web/arosdev/htdocs'
  REMOTE_UNITTETS_DIR: '/home/project-web/arosdev/htdocs/unittests'
  LOCAL_WORKDIR: '$(Build.SourcesDirectory)/scripts/web'

steps:

- task: DownloadSecureFile@1
  name: GetSSHKey
  inputs:
    secureFile: 'sf-azure-key'

- script: |
    echo "Setting up SSH key..."
    mkdir -p ~/.ssh
    cp "$(GetSSHKey.secureFilePath)" ~/.ssh/id_rsa
    chmod 600 ~/.ssh/id_rsa
    chmod 700 ~/.ssh

    # Add SourceForge host to known hosts for non-interactive SSH
    ssh-keyscan -t rsa shell.sourceforge.net >> ~/.ssh/known_hosts
  displayName: 'Setup SSH Key for SSH Access'

- script: |
    echo "Fetch remote unittest file list..."
    ssh -o StrictHostKeyChecking=yes "$(SF_RSYNC_USER)"@shell.sourceforge.net \
      "ls -1 $(REMOTE_UNITTETS_DIR)" > unittest_file_list.txt

    echo "Fetch current unittests.html..."
    scp "$(SF_RSYNC_USER)"@shell.sourceforge.net:$(PROJWEBDIR)/unittests.html .

    echo "Run local unittest html update script..."
    python3 $(LOCAL_WORKDIR)/updateunittests unittest_file_list.txt unittests.html

    echo "Upload updated unittests.html back to remote..."
    scp unittests.html "$(SF_RSYNC_USER)"@shell.sourceforge.net:$(PROJWEBDIR)/unittests.html
  env:
    SF_RSYNC_USER: $(SF_RSYNC_USER)
  displayName: 'Fetch, Update and Upload Unittests.html'
  
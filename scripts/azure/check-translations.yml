trigger: none

resources:
  pipelines:
    - pipeline: AROSPipeline16
      source: 'aros-development-team.AROS-pc-i386'
      trigger:
        branches:
          include:
            - main

pool:
  vmImage: ubuntu-latest

steps:
  - script: |
      echo "Fetching pipeline run ID from triggered pipeline..."
      pipeline_run_id=$(echo "$(resources.pipeline.AROSPipeline16.runID)")
      echo "Pipeline run ID: $pipeline_run_id"

      echo "Fetching build info for pipeline run..."
      build_info=$(curl -s -u ":$(System.AccessToken)" \
        "$(System.CollectionUri)$(System.TeamProject)/_apis/pipelines/16/runs/$pipeline_run_id?api-version=7.1-preview.1")

      build_id=$(echo "$build_info" | jq -r '.build.id')
      echo "Resolved build ID: $build_id"

      echo "Downloading logs.zip for build ID $build_id..."
      curl -sSL -u ":$(System.AccessToken)" \
        "$(System.CollectionUri)$(System.TeamProject)/_apis/build/builds/$build_id/logs.zip?api-version=6.0" \
        -o logs.zip

      echo "Checking logs.zip file type..."
      file logs.zip

      echo "Unzipping logs..."
      unzip -q logs.zip -d logs || (echo "Unzip failed" && file logs.zip && exit 1)
    displayName: 'Download and unzip logs from arros-development-team.AROS-pc-i386'
    env:
      System.AccessToken: $(System.AccessToken)

  - script: |
      echo "Searching logs for known warnings..."

      grep -Er \
        '^- warning: no catalog revision|- warning: ERROR in iconv|- warning: UTF8 conversion|- Warning: missing translation|- Warning: original string|missing in catalog description' logs/ > translation-errors.log || true

      echo "Matched log lines:"
      cat translation-errors.log || echo "No matching warnings found."
    displayName: 'Grep for translation warnings'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'translation-errors.log'
      artifactName: 'translation-warnings'
    condition: succeededOrFailed()
